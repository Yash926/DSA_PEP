Hashing

2sum
Majority element
Isomorphic strings
Valid anagrams
Sort characters by frequency
Missing number in an array

Sets
Union of arrays
Intersection of arrays
Contains duplicates
Happy numbers
Morse code leetcode 804

https://www.geeksforgeeks.org/problems/introduction-to-linked-list/1

https://www.geeksforgeeks.org/problems/linked-list-insertion-1587115620/0

https://www.geeksforgeeks.org/problems/count-nodes-of-linked-list/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=practice_card

https://www.geeksforgeeks.org/problems/delete-a-node-in-single-linked-list/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=practice_card

https://leetcode.com/problems/linked-list-cycle-ii/description/



Linkedlist

https://leetcode.com/problems/middle-of-the-linked-list/description/
https://leetcode.com/problems/reverse-linked-list/description/
https://leetcode.com/problems/delete-the-middle-node-of-a-linked-list/description/
https://leetcode.com/problems/palindrome-linked-list/description/
https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/



https://leetcode.com/problems/linked-list-cycle-ii/description/
https://leetcode.com/problems/palindrome-linked-list/description/
https://leetcode.com/problems/intersection-of-two-linked-lists/description/
https://leetcode.com/problems/add-two-numbers/description/

https://leetcode.com/problems/intersection-of-two-linked-lists/description/

https://leetcode.com/problems/reverse-string/

https://leetcode.com/problems/valid-parentheses/

https://www.geeksforgeeks.org/problems/evaluation-of-postfix-expression1735/1?itm_source=geeksforgeeks&itm_medium=article&itm_campaign=practice_card



/ Online Free Java compiler to run Java program online
import java.util.* ;
public class Main {
public static void main(String[] args) {
int arr [] = {4, 5, 2, 10, 8, 7, 6};
[-1, -1, 5, -1, 10, 8, 7]
// iterate from back
// compare arr[i] with stack top
// while arr[i] > top : pop()
// nge (top , -1)
// st.push(arr[i])
Stack<Integer> st = new Stack<>() ;
ArrayList<Integer> ans = new ArrayList<>() ;
for(int i =0 ; i < arr.length ;i++)
{
while (st.size() > 0 && arr[i] > st.peek())
{
st.pop() ;
}
if(st.size() > 0 )
{
ans.add(st.peek());
}
else
{
ans.add(-1);
}
st.push(arr[i]) ;
}


System.out.println(ans);
}
}

https://leetcode.com/problems/next-greater-element-i/description/

https://leetcode.com/problems/online-stock-span/description/


Next Greater element
Next smaller element
Prev greater element
prev smaller element
